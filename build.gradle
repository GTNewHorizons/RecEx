buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT"
    }
}

import java.util.concurrent.TimeUnit
apply plugin: 'forge'
apply plugin: 'eclipse'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

eclipse {
	classpath {
		downloadJavadoc = true
		downloadSources = true
	}
}

idea {
    module {
        inheritOutputDirs = true
        downloadJavadoc = true
        downloadSources = true
    }
}

configurations {
	shade
	compile.extendsFrom shade
}

/* eclipse.classpath.file.withXml {x ->
	def n = x.asNode()
	n.classpathentry.find {
		it.@kind == 'lib' && it.@path.contains('gregtech-5.09.33.31-dev')
	}.@sourcepath = 'libs/gregtech-5.09.33.31-src.zip'
} */

version = "0.0.3"
group = "com.bigbass.recex"
archivesBaseName = "RecipeExporter"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
	
	srgExtra "PK: com/google repack/recex/com/google"
	srgExtra "PK: javax/json repack/recex/javax/json"
	srgExtra "PK: org/glassfish repack/recex/org/glassfish"
	//srgExtra "PK: org/slf4j repack/recex/org/slf4j"
	//srgExtra "PK: org/apache repack/recex/org/apache"
	//srgExtra "PK: org/zeroturnaround repack/recex/org/zeroturnaround"
}

configurations {
    all {
        resolutionStrategy.cacheChangingModulesFor(0, TimeUnit.SECONDS)
        setTransitive(false)
    }
}

repositories {
	maven {
		name = "chickenbones"
		url = "http://chickenbones.net/maven/"
	}
	maven {
		name = "jitpack"
		url = "https://jitpack.io"
	}
}

dependencies {
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
	compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
	compile "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"
    compile("com.github.GTNewHorizons:GT5-Unofficial:experimental-SNAPSHOT:dev") { setChanging(true) }
	
	shade "com.google.code.gson:gson:2.7"
	
	shade "javax.json:javax.json-api:1.0"
	shade "org.glassfish:javax.json:1.0.4"
	
	shade "net.lingala.zip4j:zip4j:2.3.1"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
	
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
		
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
	
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
	configurations.shade.each { dep ->
		from(project.zipTree(dep)){
			exclude 'META-INF', 'META-INF/**'
		}
	}
}
